[
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/lizahall/Desktop/School/Spring 2024/Applied Data Analysis/Module3Fork/janynemusso-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/lizahall/Desktop/School/Spring 2024/Applied Data Analysis/Module3Fork/janynemusso-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!\n\nFeel free to change this text any way you want can 😁!"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "library(\"dslabs\") #look at and play with data from dslabs package\nlibrary(\"renv\")\n\n\nAttaching package: 'renv'\n\n\nThe following objects are masked from 'package:stats':\n\n    embed, update\n\n\nThe following objects are masked from 'package:utils':\n\n    history, upgrade\n\n\nThe following objects are masked from 'package:base':\n\n    autoload, load, remove\n\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ purrr::modify() masks renv::modify()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(\"modelr\")\n\n\nAttaching package: 'modelr'\n\nThe following object is masked from 'package:dslabs':\n\n    heights\n\nlibrary(\"ggplot2\")\ndata is from gapminder within dslabs; contains health and income outcomes for countries from 1960-2016\n#look at help file for gapminder data\nhelp(gapminder)\n# get an overview of data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#get a summary of data\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#determine the type of object gapminder is\nclass(gapminder)\n\n[1] \"data.frame\"\nStep 1 identify all countries within Africa and assign them to the variable africadata; then run a str and summary to the africadata; there should be 2907 observations noted within the str\nafricadata &lt;- gapminder |&gt; filter(continent==\"Africa\")\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\nStep 2 split africadata in two new objects: (1) infant_mortality and life_expectancy; (2) population and life_expectancy\nafrica_infantdata &lt;- africadata |&gt; select(infant_mortality, life_expectancy)\nafrica_populationdata &lt;- africadata |&gt; select(population, life_expectancy) |&gt; mutate(logpop = log(population))\nsummary(africa_populationdata)\n\n   population        life_expectancy     logpop     \n Min.   :    41538   Min.   :13.20   Min.   :10.63  \n 1st Qu.:  1605232   1st Qu.:48.23   1st Qu.:14.29  \n Median :  5570982   Median :53.98   Median :15.53  \n Mean   : 12235961   Mean   :54.38   Mean   :15.36  \n 3rd Qu.: 13888152   3rd Qu.:60.10   3rd Qu.:16.45  \n Max.   :182201962   Max.   :77.60   Max.   :19.02  \n NA's   :51                          NA's   :51\nStep 3 Plot A : life expectancy as a function of infant mortality & Plot B : life expectancy as a function of population size (log scale)\nggplot(africa_infantdata, aes(infant_mortality, life_expectancy)) + geom_point()\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\nggplot(africa_populationdata, aes(logpop,life_expectancy))+geom_point()\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\nStep 4 (A) use the lm function (linear model) and fit life expectancy as the outcome, and infant mortality as teh predictor. & (B) Use the lm function and fit life expectancy as the outcome and population size as the predictor.\nfit1 &lt;-lm(life_expectancy~infant_mortality, africa_infantdata)\nfit2 &lt;-lm(life_expectancy~logpop, africa_populationdata)\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africa_infantdata)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-35.361  -2.433   0.353   2.861  12.809 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      70.912576   0.216196  328.00   &lt;2e-16 ***\ninfant_mortality -0.168946   0.002064  -81.86   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.687 on 2679 degrees of freedom\n  (226 observations deleted due to missingness)\nMultiple R-squared:  0.7144,    Adjusted R-squared:  0.7143 \nF-statistic:  6700 on 1 and 2679 DF,  p-value: &lt; 2.2e-16\n\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ logpop, data = africa_populationdata)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-41.079  -6.087  -0.568   5.622  23.160 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  50.1991     1.6598  30.245   &lt;2e-16 ***\nlogpop        0.2614     0.1075   2.431   0.0151 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.911 on 2854 degrees of freedom\n  (51 observations deleted due to missingness)\nMultiple R-squared:  0.002066,  Adjusted R-squared:  0.001717 \nF-statistic:  5.91 on 1 and 2854 DF,  p-value: 0.01512\n\n#create scatterplot with fitted regression\nggplot(africa_infantdata, aes(x=infant_mortality, y=life_expectancy))+geom_point()+stat_smooth(method=\"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 226 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\nggplot(africa_populationdata, aes(x=logpop, y=life_expectancy))+geom_point()+stat_smooth(method=\"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 51 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\nThe streaks of data are related to the yearly data collection from an origin. The plots created include a third co-variant of time which can hide the true relationship between life expectancy and infant mortality or population. When looking at the population plot, we can see there is no trend; The streaks are the countries yearly data.\nStep 5 Remove missing values for infant mortality & only use data for the year 2000\n#Find years with missing data\ninfant_missingdata &lt;- unique(africadata$year[is.na(africadata$infant_mortality)])\n\n#Exclude the years with missing data\nyears_to_include &lt;- setdiff(unique(africadata$year), c(1981, 2016))\n\n#Extract data for the year 2000\nafricadata_2000 &lt;- africadata[africadata$year %in% years_to_include & africadata$year == 2000, ] |&gt; mutate(logpop=log(population))\n\nstr(africadata_2000)\n\n'data.frame':   51 obs. of  10 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n $ logpop          : num  17.3 16.5 15.8 14.4 16.3 ...\n\nsummary(africadata_2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region       logpop     \n Eastern Africa           :16   Min.   :11.30  \n Western Africa           :16   1st Qu.:14.63  \n Middle Africa            : 8   Median :15.99  \n Northern Africa          : 6   Mean   :15.69  \n Southern Africa          : 5   3rd Qu.:16.67  \n Australia and New Zealand: 0   Max.   :18.63  \n (Other)                  : 0\nStep 6 Plotting the data cleaning from step 5\nfit3 &lt;-lm(life_expectancy~infant_mortality, africadata_2000)\nfit4 &lt;-lm(life_expectancy~logpop, africadata_2000)\nsummary(fit3)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africadata_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\nsummary(fit4)\n\n\nCall:\nlm(formula = life_expectancy ~ logpop, data = africadata_2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.113  -4.809  -1.554   3.907  18.863 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  65.3243    12.5203   5.217 3.65e-06 ***\nlogpop       -0.5711     0.7943  -0.719    0.476    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.502 on 49 degrees of freedom\nMultiple R-squared:  0.01044,   Adjusted R-squared:  -0.009755 \nF-statistic: 0.517 on 1 and 49 DF,  p-value: 0.4755\n\n#create scatterplot with fitted regression\nggplot(africadata_2000, aes(x=infant_mortality, y=life_expectancy))+geom_point()+stat_smooth(method=\"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nggplot(africadata_2000, aes(x=population, y=life_expectancy))+geom_point()+stat_smooth(method=\"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\nWe can see the relationship between infant_mortality and life_expectancy is statistically significant. As the infant mortality increases, the life expectancy decreases when comparing the countries within Africa in 2000. When observing the relationship between population and life expectancy there is no statistically significant relationship when comparing the African countries data in 2000."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Welcome to my page. I’m a budding researcher with silly dreams and aspirations."
  },
  {
    "objectID": "aboutme.html#background",
    "href": "aboutme.html#background",
    "title": "About me",
    "section": "Background",
    "text": "Background\nAt the moment, I’m pursuing my Master in Public Health with concentrations in Disaster Management and Epidemiology. For the past five years I’ve been a bedside emergency department nurse through out Atlanta, Georgia and a modern Pandemic. I became a mama in 2022 to a spunky little warrior girl. This year I started my career in quality improvement and education at Grady Memorial Hospital. I’m eager to use this class’s information to improve quality of care for the population we serve."
  },
  {
    "objectID": "aboutme.html#foreground",
    "href": "aboutme.html#foreground",
    "title": "About me",
    "section": "Foreground",
    "text": "Foreground\nI hope to pursue mixed-method research focusing on the intersection of conflict or disasters and public health. Though this is my end goal, I have such a variety of interest. Like a squirrel in a nut forest, I hop from tree to tree."
  },
  {
    "objectID": "aboutme.html#hobbies",
    "href": "aboutme.html#hobbies",
    "title": "About me",
    "section": "Hobbies",
    "text": "Hobbies\nI love learning new and obscure things. I love books, podcasts, articles, short stories, poem, art, philosophy or any intriguing way of thinking or creating. Below are few of the areas my mind dwells in lately!\n\nCrime Junkies\nIf you like crime stories, this is a great podcast. They do amazing work in positively using thier voice and audience to bring attention to lesser known stories. Take a listen to this episode: Missing Lucely Aramburo, and let me know what ya think.\n\n\nPod Save the World\nThis is a wonderful podcast that provides an insider perspective to global news. The hosts use to work for the Obama administration. This episode is about the Israel, Hamas, and Palestine Conflict: How Israel’s War with Hamas Could Escalate Into a Regional Conflict\n\n\nBooks\nI’ve been reading more and more lately, but I find more books than I’m able to consume. Here are my eventually will read lists on Amazon & GoodReads. If you see any I should prioritize, let me know! I love a good recommendation.\n\nFlorence Nightingale\n\n\n\n\n\n\nThe idea that one might speculate about the development of the random element through references in literature of all kinds-classical, archaeological, biographical, poetical and fictional-is one which came to me as a student some thirty years ago. Since then, as friends and colleagues learnt of my interest, the number of references to which my attention has been drawn has increased rapidly, each year filling many notebooks. It is too much to hope that this list of references can ever be completed, but it is, I think, fair to saythat many of the most significant have been made known to me.\n\n\n\n-F. N. David\nAside from being on the forefront of nursing, Florence Nightingale used data and statistics to prove the need for nursing in a battleground filled with men. She was a warrior in her own era, one who stood up to generals, cleaned the infected, and held the hands of the dying. She was never my inspiration for nursing, but the truth is she is my inspiration for data analysis, and using evidence as power for change. As any female writer in the 1960s intending on publishing, she signed her book with initials allowing the masses to believe she was male. With the title Games, Gods, and Gambling: A History of Probability and Statistical Ideas, I think its clear she was quite a spunky lady."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Placeholder file for the future data/results presentation exercise."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "The structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#this-section-contributed-by-liza-hall.",
    "href": "coding-exercise/coding-exercise.html#this-section-contributed-by-liza-hall.",
    "title": "R Coding Exercise",
    "section": "This section contributed by Liza Hall.",
    "text": "This section contributed by Liza Hall.\nFor my further analysis, I chose to look at the dataset movielens. I specifically explored movie year, rating, and genres.\n\nLoading packages, dslabs, tidyverse, and stringr.\n# load packages\nlibrary(dslabs)\nlibrary(tidyverse)\nlibrary(stringr)\nUsing stringr to filter and select for movies with only one genre.\n# filter to select movies with only one genre\nmovielens_single_genre &lt;- subset(movielens, str_count(genres, \"\\\\|\") == 0)\nFiltering to select for only movies from 1970-1979.\n# filter to select only movies from the 70s\nmovielens_single_genre70s &lt;- subset(movielens_single_genre, year %in% 1970:1979)\nCreating subsets for rating/genres, year/genres, and year/genres/rating. This is done for graphing and analysis purposes.\n# creating subsets for rating/genres, year/genres, and year/genres/rating.\nrating_genres &lt;- movielens_single_genre70s[, c(\"rating\", \"genres\")]\nyear_genres &lt;- movielens_single_genre70s[, c(\"year\", \"genres\")]\nyear_genres_rating &lt;- movielens_single_genre70s[, c(\"year\", \"genres\", \"rating\")]\nUsing tidyverse to plot ratings vs genres.\n# plot rating vs genres\np1 &lt;- ggplot(rating_genres, aes(x = rating, y = genres))+geom_point()+\n  ggtitle('Rating vs Genres [70s]')+\n  theme_classic()+\n  xlab('Rating')+\n  ylab('Genres')+\n  theme(plot.caption = element_text(hjust=0, face=\"bold\"))\n  plot(p1)\n\nUsing tidyverse to plot years vs genres.\n# plot year vs genres\np2 &lt;- ggplot(year_genres, aes(x = year, y = genres))+geom_point()+\n  ggtitle('Year vs Genres [70s]')+\n  theme_classic()+\n  xlab('Year')+\n  ylab('Genres')+\n  theme(plot.caption = element_text(hjust=0, face=\"bold\"))\n  plot(p2)\n\nUsing tidyverse to plot rating vs year, with data points colored by genre.\n# make genres a factor (for color coding) \nyear_genres_rating$genres &lt;- factor(year_genres_rating$genres)\n\n# plot rating vs year, with data points color coded by genre  \np3 &lt;- ggplot(year_genres_rating, aes(x = rating, y = year, color=genres))+geom_point()+\n  ggtitle('Rating vs Years [70s]')+\n  theme_classic()+\n  xlab('Rating')+\n  ylab('Year')+\n  theme(plot.caption = element_text(hjust=0, face=\"bold\"))\n  plot(p3)\n\nStatistical analysis using simple fit models for rating/genres and year/genres. Fit 2 (years/genres) had a lower p-value, and thus is the better fit.\n # simple model fits for rating/genres and year/genres\n  fit1 &lt;- lm(rating ~ genres, data = movielens_single_genre70s)\n  fit2 &lt;- lm(year ~ genres, data = movielens_single_genre70s)\n  \n  # stats summary for fits 1 and 2\n  summary(fit1)\n  summary(fit2)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#section",
    "href": "coding-exercise/coding-exercise.html#section",
    "title": "R Coding Exercise",
    "section": "-",
    "text": "-\nLoading packages, dslabs, tidyverse, and stringr.\n\n# load packages\nlibrary(dslabs)\nlibrary(tidyverse)\nlibrary(stringr)\n\n\n\n\n\n\n\nUsing stringr to filter and select for movies with only one genre.\n\n\n\n\nFiltering to select for only movies from 1970-1979.\n\n\n::: {.cell}\n\n\n{.r .cell-code} # filter to select only movies from the 70s movielens_single_genre70s &lt;- subset(movielens_single_genre, year %in% 1970:1979) :::\n\n\n\nCreating subsets for rating/genres, year/genres, and year/genres/rating. This is done for graphing and analysis purposes.\n\n# creating subsets for rating/genres, year/genres, and year/genres/rating.\nrating_genres &lt;- movielens_single_genre70s[, c(\"rating\", \"genres\")]\nyear_genres &lt;- movielens_single_genre70s[, c(\"year\", \"genres\")]\nyear_genres_rating &lt;- movielens_single_genre70s[, c(\"year\", \"genres\", \"rating\")]\n\n\n\n\n\n\n\nUsing tidyverse to plot ratings vs genres.\n\n\n\n\nUsing tidyverse to plot years vs genres.\n\n\n::: {.cell}\n\n\n{.r .cell-code} # plot year vs genres p2 &lt;- ggplot(year_genres, aes(x = year, y = genres))+geom_point()+ ggtitle('Year vs Genres [70s]')+ theme_classic()+ xlab('Year')+ ylab('Genres')+ theme(plot.caption = element_text(hjust=0, face=\"bold\")) plot(p2)\n\n\n::: {.cell-output-display}  ::: :::\n\n\n\nUsing tidyverse to plot rating vs year, with data points colored by genre.\n\n# make genres a factor (for color coding) \nyear_genres_rating$genres &lt;- factor(year_genres_rating$genres)\n\n# plot rating vs year, with data points color coded by genre  \np3 &lt;- ggplot(year_genres_rating, aes(x = rating, y = year, color=genres))+geom_point()+\n  ggtitle('Rating vs Years [70s]')+\n  theme_classic()+\n  xlab('Rating')+\n  ylab('Year')+\n  labs(caption = \"Figure 3: poo pee poo pee\")+\n  theme(plot.caption = element_text(hjust=0, face=\"bold\"))\n  plot(p3)\n\n\n\n\n\n\n\n\n\n\nStatistical analysis using simple fit models for rating/genres and year/genres.Fit 2 [year/genres] had a lower p-value, and thus is the better fit.\n\n\n\n\nSignif. codes: 0 ‘’ 0.001 ’’ 0.01 ’’ 0.05 ‘.’ 0.1 ’ ’ 1\n\n\nResidual standard error: 0.9639 on 1093 degrees of freedom Multiple R-squared: 0.04652, Adjusted R-squared: 0.03606 F-statistic: 4.444 on 12 and 1093 DF, p-value: 5.466e-07 ``` :::\n\n\n{.r .cell-code} summary(fit2)\n\n\n::: {.cell-output .cell-output-stdout} ```\n\n\nCall: lm(formula = year ~ genres, data = movielens_single_genre70s)\n\n\nResiduals: Min 1Q Median 3Q Max -7.1413 -1.3056 0.8587 1.8587 4.0093\n\n\nCoefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1975.6667 0.6767 2919.688 &lt; 2e-16  genresAdventure 3.3333 1.9728 1.690 0.0914 . genresAnimation -3.0000 1.6575 -1.810 0.0706 . genresComedy 1.4746 0.6906 2.135 0.0330  genresCrime 0.3333 2.7067 0.123 0.9020 genresDocumentary -1.3611 0.8054 -1.690 0.0913 . genresDrama -0.6760 0.6861 -0.985 0.3247 genresHorror 0.9643 0.7346 1.313 0.1896 genresMusical -0.6667 1.1050 -0.603 0.5464 genresSci-Fi 0.6667 1.6575 0.402 0.6876 genresThriller -1.1404 0.9052 -1.260 0.2080 genresWar -1.6667 1.9728 -0.845 0.3984 genresWestern -4.3611 0.8054 -5.415 7.54e-08 *\n\n\n\nSignif. codes: 0 ‘’ 0.001 ’’ 0.01 ’’ 0.05 ‘.’ 0.1 ’ ’ 1\nResidual standard error: 2.621 on 1093 degrees of freedom Multiple R-squared: 0.2057, Adjusted R-squared: 0.1969 F-statistic: 23.58 on 12 and 1093 DF, p-value: &lt; 2.2e-16 ``` ::: :::"
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Janyne's Data Analysis Portfolio",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(tidytext)\nlibrary(textdata)\nlibrary(dslabs)\nlibrary(gutenbergr)\n\nThe Public Domain works available off Gutenberg. If we can look at the sentiments of Pride and Prejudice? Could we look at the sentiments of all her books and compare them to each other?\n\nworks &lt;-gutenberg_works(languages=\"en\",\n                only_text=TRUE,\n                rights=c(\"Public domain in the USA.\", \"None\"),\n                distinct=TRUE,\n                all_languages=FALSE,\n                only_languages=TRUE\n)\n\nausten_works &lt;- works |&gt; filter(str_detect(author, \"Austen, Jane\"))\nprint(austen_works)\n\n# A tibble: 11 × 8\n   gutenberg_id title    author gutenberg_author_id language gutenberg_bookshelf\n          &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;                &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;              \n 1          105 \"Persua… Auste…                  68 en       \"\"                 \n 2          121 \"Northa… Auste…                  68 en       \"Gothic Fiction\"   \n 3          141 \"Mansfi… Auste…                  68 en       \"\"                 \n 4          158 \"Emma\"   Auste…                  68 en       \"\"                 \n 5          946 \"Lady S… Auste…                  68 en       \"\"                 \n 6         1212 \"Love a… Auste…                  68 en       \"\"                 \n 7         1342 \"Pride … Auste…                  68 en       \"Best Books Ever L…\n 8        21839 \"Sense … Auste…                  68 en       \"\"                 \n 9        31100 \"The Co… Auste…                  68 en       \"\"                 \n10        37431 \"Pride … Auste…                  68 en       \"\"                 \n11        42078 \"The Le… Auste…                  68 en       \"\"                 \n# ℹ 2 more variables: rights &lt;chr&gt;, has_text &lt;lgl&gt;\n\n\nObtain a book and turn the words into a tibble. Need to remove frequently used words.\n\nPride_Prejudice_works &lt;- works |&gt; filter(str_detect(title, \"Pride and Prejudice\")) #All avaible Pride and Prejudice\nsummary(austen_works)\n\n  gutenberg_id        title              author          gutenberg_author_id\n Min.   :  105.0   Length:11          Length:11          Min.   :68         \n 1st Qu.:  149.5   Class :character   Class :character   1st Qu.:68         \n Median : 1212.0   Mode  :character   Mode  :character   Median :68         \n Mean   :12406.6                                         Mean   :68         \n 3rd Qu.:26469.5                                         3rd Qu.:68         \n Max.   :42078.0                                         Max.   :68         \n   language         gutenberg_bookshelf    rights          has_text      \n Length:11          Length:11           Length:11          Mode:logical  \n Class :character   Class :character    Class :character   TRUE:11       \n Mode  :character   Mode  :character    Mode  :character                 \n                                                                         \n                                                                         \n                                                                         \n\nstr(austen_works)\n\ntibble [11 × 8] (S3: tbl_df/tbl/data.frame)\n $ gutenberg_id       : int [1:11] 105 121 141 158 946 1212 1342 21839 31100 37431 ...\n $ title              : chr [1:11] \"Persuasion\" \"Northanger Abbey\" \"Mansfield Park\" \"Emma\" ...\n $ author             : chr [1:11] \"Austen, Jane\" \"Austen, Jane\" \"Austen, Jane\" \"Austen, Jane\" ...\n $ gutenberg_author_id: int [1:11] 68 68 68 68 68 68 68 68 68 68 ...\n $ language           : chr [1:11] \"en\" \"en\" \"en\" \"en\" ...\n $ gutenberg_bookshelf: chr [1:11] \"\" \"Gothic Fiction\" \"\" \"\" ...\n $ rights             : chr [1:11] \"Public domain in the USA.\" \"Public domain in the USA.\" \"Public domain in the USA.\" \"Public domain in the USA.\" ...\n $ has_text           : logi [1:11] TRUE TRUE TRUE TRUE TRUE TRUE ...\n - attr(*, \"date_updated\")= Date[1:1], format: \"2022-12-19\"\n\npride_prejudice &lt;- Pride_Prejudice_works$gutenberg_id[2] #contains the metadata\npride_prejudice_book&lt;-gutenberg_download(37431) #contains the book content\n\nDetermining mirror for Project Gutenberg from https://www.gutenberg.org/robot/harvest\n\n\nUsing mirror http://aleph.gutenberg.org\n\n\n\npride_prejudice_words &lt;- pride_prejudice_book |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word) |&gt; mutate(book=1) #contains the words within the book, last pipeline places a unique identifier for the words\nsummary(pride_prejudice_words)\n\n     word                 n               book  \n Length:3030        Min.   :  1.00   Min.   :1  \n Class :character   1st Qu.:  1.00   1st Qu.:1  \n Mode  :character   Median :  1.00   Median :1  \n                    Mean   :  3.36   Mean   :1  \n                    3rd Qu.:  2.00   3rd Qu.:1  \n                    Max.   :396.00   Max.   :1  \n\nstr(pride_prejudice_words)\n\ntibble [3,030 × 3] (S3: tbl_df/tbl/data.frame)\n $ word: chr [1:3030] \"elizabeth\" \"bennet\" \"darcy\" \"bingley\" ...\n $ n   : int [1:3030] 396 317 289 173 171 161 155 109 106 100 ...\n $ book: num [1:3030] 1 1 1 1 1 1 1 1 1 1 ...\n\n\nNext, we can obtain all of Austen’s aviable books. I included a book about her letters as well.\n\npersuasion_words &lt;-gutenberg_download(105) |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word) |&gt; mutate(book=2)#contains the words within Persuasion\nnorthanger_words &lt;-gutenberg_download(121) |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word) |&gt; mutate(book=3)#contains the words within Northanger Abbey\nmansfield_words &lt;-gutenberg_download(141) |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word) |&gt; mutate(book=4)#contains the words within Mansfield Park\nemma_words &lt;-gutenberg_download(158) |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word) |&gt; mutate(book=5)#contains the words within Emma\nladysusan_words &lt;-gutenberg_download(946) |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word) |&gt; mutate(book=6)#contains the words within Lady Susan\nlove_words &lt;-gutenberg_download(1212) |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word) |&gt; mutate(book=7)#contains the words within Love and Friendship\nsense_words &lt;-gutenberg_download(21839) |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word) |&gt; mutate(book=8)#contains the words within Sense and Sensibility\nletters_words &lt;-gutenberg_download(42078) |&gt; unnest_tokens(word,text) |&gt;count(word) |&gt; arrange(desc(n)) |&gt; filter(!word %in% stop_words$word)|&gt; mutate(book=9) #contains the words within The Letters of Jane Austen\n\nUsing tidytext functions words can be divided into positive and negative sentiments (bing), provided with a score from -5 to 5 (afinn), loughran and nrc provide additional types of sentiments outside of positive and negative such as constraining, litigious, anger, anticipation etc. All the tables are then appended into the one table, defined by a book number (1-9). The table is then matched to sentiments and a score.\n\nafinn &lt;- get_sentiments(\"afinn\") |&gt; select(word, value)\nnrc &lt;- get_sentiments(\"nrc\") |&gt; select(word,sentiment)\nloughran &lt;- get_sentiments(\"loughran\") |&gt; select(word,sentiment)\naustens_sentiments &lt;- bind_rows(pride_prejudice_words,persuasion_words, northanger_words, mansfield_words, emma_words, ladysusan_words, love_words, sense_words, letters_words) |&gt; inner_join(afinn, by=\"word\", relationship=\"many-to-many\") |&gt; inner_join(nrc, by=\"word\", relationship=\"many-to-many\") |&gt;inner_join(loughran, by=\"word\",relationship=\"many-to-many\")\n\nsummary(austens_sentiments)\n\n     word                 n                book           value        \n Length:3386        Min.   :  1.000   Min.   :1.000   Min.   :-4.0000  \n Class :character   1st Qu.:  1.000   1st Qu.:3.000   1st Qu.:-2.0000  \n Mode  :character   Median :  3.000   Median :5.000   Median :-2.0000  \n                    Mean   :  7.313   Mean   :5.044   Mean   :-0.7292  \n                    3rd Qu.:  7.000   3rd Qu.:7.000   3rd Qu.: 2.0000  \n                    Max.   :125.000   Max.   :9.000   Max.   : 4.0000  \n sentiment.x        sentiment.y       \n Length:3386        Length:3386       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n\nstr(austens_sentiments)\n\ntibble [3,386 × 6] (S3: tbl_df/tbl/data.frame)\n $ word       : chr [1:3386] \"happy\" \"happy\" \"happy\" \"happy\" ...\n $ n          : int [1:3386] 17 17 17 17 15 15 15 13 13 13 ...\n $ book       : num [1:3386] 1 1 1 1 1 1 1 1 1 1 ...\n $ value      : num [1:3386] 3 3 3 3 3 3 3 -2 -2 -2 ...\n $ sentiment.x: chr [1:3386] \"anticipation\" \"joy\" \"positive\" \"trust\" ...\n $ sentiment.y: chr [1:3386] \"positive\" \"positive\" \"positive\" \"positive\" ...\n\n\n\nggplot(austens_sentiments, aes(x = book, y = value)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # Rotate x labels for better readability\n  labs(x = \"Book\", y = \"Sentiment Value\", title = \"Sentiments by Book\")\n\n\n\n\n“Mansfield” and “Sense and Sensibility” have a much wider range of sentiments when compared to the rest of Austen’s books."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/donn/Desktop/MADA/janynemusso-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n4 Cardio          minutes of cardio in one week         whole integers        \n5 caff            number of cafienated beverages daily  whole integers        \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height &lt;chr&gt; \"180\", \"192\", \"sixty\", \"166\", \"178\", \"133\", \"175\", \"6\", \"156\", …\n$ Weight &lt;dbl&gt; 80, 90, 60, 55, 76, 45, 70, 55, 90, 7000, 54, NA, 50, 110\n$ Gender &lt;chr&gt; \"M\", \"NA\", \"F\", \"M\", \"F\", \"F\", \"O\", \"F\", \"O\", \"M\", \"N\", \"F\", \"M…\n$ Cardio &lt;dbl&gt; 87, 91, 128, 121, 242, 261, 327, 44, 138, 81, 509, 510, 532, 543\n$ caff   &lt;dbl&gt; 2, 3, 4, 0, 3, 3, 2, 2, 3, 2, 4, 0, 1, 2\n\nsummary(rawdata)\n\n    Height              Weight          Gender              Cardio     \n Length:14          Min.   :  45.0   Length:14          Min.   : 44.0  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.: 98.5  \n Mode  :character   Median :  70.0   Mode  :character   Median :190.0  \n                    Mean   : 602.7                      Mean   :258.1  \n                    3rd Qu.:  90.0                      3rd Qu.:463.5  \n                    Max.   :7000.0                      Max.   :543.0  \n                    NA's   :1                                          \n      caff      \n Min.   :0.000  \n 1st Qu.:2.000  \n Median :2.000  \n Mean   :2.214  \n 3rd Qu.:3.000  \n Max.   :4.000  \n                \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender Cardio  caff\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 180        80 M          87     2\n2 192        90 NA         91     3\n3 sixty      60 F         128     4\n4 166        55 M         121     0\n5 178        76 F         242     3\n6 133        45 F         261     3\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.0\n70\n90.0\n7000\n▇▁▁▁▁\n\n\nCardio\n0\n1.00\n258.14\n190.58\n44\n98.5\n190\n463.5\n543\n▇▁▂▁▅\n\n\ncaff\n0\n1.00\n2.21\n1.25\n0\n2.0\n2\n3.0\n4\n▃▂▇▆▃\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\n#Change caff variable to factor variable\nrawdata$caff &lt;- as.factor(rawdata$caff)  \n\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncaff\n0\n1\nFALSE\n5\n2: 5, 3: 4, 0: 2, 1: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nCardio\n0\n1.00\n268.15\n194.49\n44\n91.00\n242\n509\n543\n▇▁▂▁▅\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncaff\n0\n1\nFALSE\n5\n2: 5, 3: 4, 0: 2, 1: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nCardio\n0\n1.00\n268.15\n194.49\n44\n91.00\n242\n509\n543\n▇▁▂▁▅\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncaff\n0\n1\nFALSE\n5\n2: 4, 3: 4, 0: 1, 1: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nCardio\n0\n1\n263.18\n189.77\n44\n106.0\n242\n418\n543\n▇▂▃▁▅\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\ncaff\n0\n1\nFALSE\n5\n2: 4, 3: 4, 0: 1, 1: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nCardio\n0\n1\n263.18\n189.77\n44\n106.0\n242\n418\n543\n▇▂▃▁▅\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\ncaff\n0\n1\nFALSE\n4\n2: 4, 3: 3, 0: 1, 1: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nCardio\n0\n1\n255.00\n183.53\n44\n121\n242\n327\n543\n▇▂▃▁▃\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/donn/Desktop/MADA/janynemusso-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  factor                   2     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts            \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2      \n2 caff                  0             1 FALSE          4 2: 4, 3: 3, 0: 1, 1: 1\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean    sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.   16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1  21.2  45  55  70  80  110 ▇▂▃▂▂\n3 Cardio                0             1 255   184.   44 121 242 327  543 ▇▂▃▁▃\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable2.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution2.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution2.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight2.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified2.png\")\nggsave(filename = figure_file, plot=p4)\n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n#Boxplot of caff on x-axis and Height on y-axis\np5 &lt;- mydata %&gt;% ggplot(aes(x=caff, y=Height)) + geom_boxplot()\nplot(p5)\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"caff-height.png\")\nggsave(filename = figure_file, plot=p5)\n\nSaving 7 x 5 in image\n\n#Scatterplot of of Weight on x-axis and Cardio on y-axis \np6 &lt;- mydata %&gt;% ggplot(aes(x=Weight, y=Cardio)) + geom_point()\nplot(p6)\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-cardio.png\")\nggsave(filename = figure_file, plot=p6)\n\nSaving 7 x 5 in image\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  }
]